window.jQuery && !window.jQuery.createTemplate && function (jQuery) { var Template = function (e, t, n) { this._tree = [], this._param = {}, this._includes = null, this._templates = {}, this._templates_code = {}, this.settings = jQuery.extend({ disallow_functions: !1, filter_data: !0, filter_params: !1, runnable_functions: !1, clone_data: !0, clone_params: !0 }, n), this.f_cloneData = this.settings.f_cloneData !== undefined ? this.settings.f_cloneData : TemplateUtils.cloneData, this.f_escapeString = this.settings.f_escapeString !== undefined ? this.settings.f_escapeString : TemplateUtils.escapeHTML, this.f_parseJSON = this.settings.f_parseJSON !== undefined ? this.settings.f_parseJSON : this.settings.disallow_functions ? jQuery.parseJSON : TemplateUtils.parseJSON; if (e == null) return; this.splitTemplates(e, t), e && this.setTemplate(this._templates_code.MAIN, t, this.settings), this._templates_code = null }; Template.version = "0.8.4", Template.DEBUG_MODE = !1, Template.FOREACH_LOOP_LIMIT = 1e4, Template.guid = 0, Template.prototype.splitTemplates = function (e, t) { var n = /\{#template *(\w+) *(.*?) *\}/g, r, i, s, o = null, u = [], a; while ((r = n.exec(e)) !== null) { o = n.lastIndex, i = r[1], s = e.indexOf("{#/template " + i + "}", o); if (s === -1) throw new Error('jTemplates: Template "' + i + '" is not closed.'); this._templates_code[i] = e.substring(o, s), u[i] = TemplateUtils.optionToObject(r[2]) } if (o === null) { this._templates_code.MAIN = e; return } for (a in this._templates_code) a !== "MAIN" && (this._templates[a] = new Template); for (a in this._templates_code) a !== "MAIN" && (this._templates[a].setTemplate(this._templates_code[a], jQuery.extend({}, t || {}, this._templates || {}), jQuery.extend({}, this.settings, u[a])), this._templates_code[a] = null) }, Template.prototype.setTemplate = function (e, t, n) { if (e == undefined) { this._tree.push(new TextNode("", 1, this)); return } e = e.replace(/[\n\r]/g, ""), e = e.replace(/\{\*.*?\*\}/g, ""), this._includes = jQuery.extend({}, this._templates || {}, t || {}), this.settings = new Object(n); var r = this._tree, i = e.match(/\{#.*?\}/g), s = 0, o = 0, u, a = 0, f, l; for (f = 0, l = i ? i.length : 0; f < l; ++f) { var c = i[f]; if (a) { o = e.indexOf("{#/literal}", s); if (o === -1) throw new Error("jTemplates: No end of literal."); o > s && r.push(new TextNode(e.substring(s, o), 1, this)), s = o + 11, a = 0; while (f < l && i[f] !== "{#/literal}") f++; continue } o = e.indexOf(c, s), o > s && r.push(new TextNode(e.substring(s, o), a, this)), c.match(/\{#([\w\/]+).*?\}/); var h = RegExp.$1; switch (h) { case "elseif": r.addCond(c); break; case "if": u = new opIF(r, this), u.addCond(c), r.push(u), r = u; break; case "else": r.switchToElse(); break; case "/if": case "/for": case "/foreach": r = r.getParent(); break; case "foreach": u = new opFOREACH(c, r, this), r.push(u), r = u; break; case "for": u = opFORFactory(c, r, this), r.push(u), r = u; break; case "continue": case "break": r.push(new JTException(h)); break; case "include": r.push(new Include(c, this._includes, this)); break; case "param": r.push(new UserParam(c, this)); break; case "var": r.push(new UserVariable(c, this)); break; case "cycle": r.push(new Cycle(c)); break; case "ldelim": r.push(new TextNode("{", 1, this)); break; case "rdelim": r.push(new TextNode("}", 1, this)); break; case "literal": a = 1; break; case "/literal": if (Template.DEBUG_MODE) throw new Error("jTemplates: Missing begin of literal."); break; default: if (Template.DEBUG_MODE) throw new Error("jTemplates: unknown tag: " + h + ".") } s = o + c.length } e.length > s && r.push(new TextNode(e.substr(s), a, this)) }, Template.prototype.get = function (e, t, n, r) { ++r, r == 1 && n != undefined && jQuery.removeData(n, "jTemplatesRef"); var i = e, s, o = ""; this.settings.clone_data && (i = this.f_cloneData(e, { escapeData: this.settings.filter_data && r == 1, noFunc: this.settings.disallow_functions }, this.f_escapeString)), this.settings.clone_params ? s = jQuery.extend({}, this.f_cloneData(this._param, { escapeData: this.settings.filter_params, noFunc: !1 }, this.f_escapeString), this.f_cloneData(t, { escapeData: this.settings.filter_params && r == 1, noFunc: !1 }, this.f_escapeString)) : s = jQuery.extend({}, this._param, t); for (var u = 0, a = this._tree.length; u < a; ++u) o += this._tree[u].get(i, s, n, r); return this.EvalObj = null, --r, o }, Template.prototype.getBin = function () { return this.EvalObj == null && (this.EvalObj = new EvalClass(this)), this.EvalObj }, Template.prototype.setParam = function (e, t) { this._param[e] = t }, TemplateUtils = function () { }, TemplateUtils.escapeHTML = function (e) { return e.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;") }, TemplateUtils.cloneData = function (e, t, n) { if (e == null) return e; switch (e.constructor) { case Object: var r = {}; for (var i in e) r[i] = TemplateUtils.cloneData(e[i], t, n); return t.noFunc || e.hasOwnProperty("toString") && (r.toString = e.toString), r; case Array: var s = []; for (var i = 0, o = e.length; i < o; ++i) s[i] = TemplateUtils.cloneData(e[i], t, n); return s; case String: return t.escapeData ? n(e) : e; case Function: if (t.noFunc) { if (Template.DEBUG_MODE) throw new Error("jTemplates: Functions are not allowed."); return undefined } } return e }, TemplateUtils.optionToObject = function (e) { if (e === null || e === undefined) return {}; var t = e.split(/[= ]/); t[0] === "" && t.shift(); var n = {}; for (var r = 0, i = t.length; r < i; r += 2) n[t[r]] = t[r + 1]; return n }, TemplateUtils.parseJSON = function (e) { if (typeof e != "string" || !e) return null; try { return (new Function("return " + jQuery.trim(e)))() } catch (t) { if (Template.DEBUG_MODE) throw new Error("jTemplates: Invalid JSON"); return {} } }, TemplateUtils.ReturnRefValue = function (e, t, n) { while (e != null) { var r = jQuery.data(e, "jTemplatesRef"); if (r != undefined && r.guid == t && r.d[n] != undefined) return r.d[n]; e = e.parentNode } return null }; var TextNode = function (e, t, n) { this._value = e, this._literalMode = t, this._template = n }; TextNode.prototype.get = function (e, t, n, r) { if (this._literalMode) return this._value; var i = this._value, s = "", o = -1, u = 0, a = -1, f = 0; for (; ; ) { var l = i.indexOf("{", o + 1), c = i.indexOf("}", o + 1); if (l < 0 && c < 0) break; l != -1 && l < c || c == -1 ? (o = l, ++u == 1 && (a = l, s += i.substring(f, o), f = -1)) : (o = c, --u === 0 ? a >= 0 && (s += this._template.getBin().evaluateContent(e, t, n, i.substring(a, c + 1)), a = -1, f = o + 1) : u < 0 && (u = 0)) } return f > -1 && (s += i.substr(f)), s }, EvalClass = function (e) { this.__templ = e }, EvalClass.prototype.evaluateContent = function ($T, $P, $Q, __value) { try { var result = eval(__value); if (jQuery.isFunction(result)) { if (this.__templ.settings.disallow_functions || !this.__templ.settings.runnable_functions) return ""; result = result($T, $P, $Q) } return result === undefined ? "" : String(result) } catch (e) { if (Template.DEBUG_MODE) throw e instanceof JTException && (e.type = "subtemplate"), e; return "" } }, EvalClass.prototype.evaluate = function ($T, $P, $Q, __value) { return eval(__value) }; var opIF = function (e, t) { this._parent = e, this._templ = t, this._cond = [], this._tree = [], this._curr = null }; opIF.prototype.push = function (e) { this._curr.push(e) }, opIF.prototype.getParent = function () { return this._parent }, opIF.prototype.addCond = function (e) { e.match(/\{#(?:else)*if (.*?)\}/), this._cond.push(RegExp.$1), this._curr = [], this._tree.push(this._curr) }, opIF.prototype.switchToElse = function () { this._cond.push(!0), this._curr = [], this._tree.push(this._curr) }, opIF.prototype.get = function (e, t, n, r) { var i = ""; try { for (var s = 0, o = this._cond.length; s < o; ++s) if (this._templ.getBin().evaluate(e, t, n, this._cond[s])) { var u = this._tree[s]; for (var a = 0, f = u.length; a < f; ++a) i += u[a].get(e, t, n, r); return i } } catch (l) { if (Template.DEBUG_MODE || l instanceof JTException) throw l } return i }, opFORFactory = function (e, t, n) { if (e.match(/\{#for (\w+?) *= *(\S+?) +to +(\S+?) *(?:step=(\S+?))*\}/)) { var r = new opFOREACH(null, t, n); return r._name = RegExp.$1, r._option = { begin: RegExp.$2 || 0, end: RegExp.$3 || -1, step: RegExp.$4 || 1, extData: "$T" }, r._runFunc = function (e) { return e }, r } throw new Error('jTemplates: Operator failed "find": ' + e) }; var opFOREACH = function (e, t, n) { this._parent = t, this._template = n, e != null && (e.match(/\{#foreach +(.+?) +as +(\w+?)( .+)*\}/), this._arg = RegExp.$1, this._name = RegExp.$2, this._option = RegExp.$3 || null, this._option = TemplateUtils.optionToObject(this._option)), this._onTrue = [], this._onFalse = [], this._currentState = this._onTrue }; opFOREACH.prototype.push = function (e) { this._currentState.push(e) }, opFOREACH.prototype.getParent = function () { return this._parent }, opFOREACH.prototype.switchToElse = function () { this._currentState = this._onFalse }, opFOREACH.prototype.get = function (e, t, n, r) { try { var i = this._runFunc === undefined ? this._template.getBin().evaluate(e, t, n, this._arg) : this._runFunc; if (i === $) throw new Error("jTemplate: Variable '$' cannot be used as loop-function"); var s = [], o = typeof i; if (o == "object") { var u = []; jQuery.each(i, function (e, t) { s.push(e), u.push(t) }), i = u } var a = this._option.extData !== undefined ? this._template.getBin().evaluate(e, t, n, this._option.extData) : e != null ? e : {}; a == null && (a = {}); var f = Number(this._template.getBin().evaluate(e, t, n, this._option.begin) || 0), l, c = Number(this._template.getBin().evaluate(e, t, n, this._option.step) || 1); o != "function" ? l = i.length : this._option.end === undefined || this._option.end === null ? l = Number.MAX_VALUE : l = Number(this._template.getBin().evaluate(e, t, n, this._option.end)) + (c > 0 ? 1 : -1); var h = "", p, d; if (this._option.count) { var v = f + Number(this._template.getBin().evaluate(e, t, n, this._option.count)); l = v > l ? l : v } if (l > f && c > 0 || l < f && c < 0) { var m = 0, g = o != "function" ? Math.ceil((l - f) / c) : undefined, y, b, w = 0; for (; c > 0 ? f < l : f > l; f += c, ++m, ++w) { if (Template.DEBUG_MODE && w > Template.FOREACH_LOOP_LIMIT) throw new Error("jTemplate: Foreach loop limit was exceed"); y = s[f]; if (o != "function") b = i[f]; else { b = i(f); if (b === undefined || b === null) break } if (typeof b == "function" && (this._template.settings.disallow_functions || !this._template.settings.runnable_functions)) continue; if (o == "object" && y in Object && b === Object[y]) continue; var E = a[this._name]; a[this._name] = b, a[this._name + "$index"] = f, a[this._name + "$iteration"] = m, a[this._name + "$first"] = m === 0, a[this._name + "$last"] = f + c >= l, a[this._name + "$total"] = g, a[this._name + "$key"] = y !== undefined && y.constructor == String ? this._template.f_escapeString(y) : y, a[this._name + "$typeof"] = typeof b; for (p = 0, d = this._onTrue.length; p < d; ++p) try { h += this._onTrue[p].get(a, t, n, r) } catch (S) { if (!(S instanceof JTException)) throw S; switch (S.type) { case "continue": p = d; break; case "break": p = d, f = l; break; default: throw S } } delete a[this._name + "$index"], delete a[this._name + "$iteration"], delete a[this._name + "$first"], delete a[this._name + "$last"], delete a[this._name + "$total"], delete a[this._name + "$key"], delete a[this._name + "$typeof"], delete a[this._name], a[this._name] = E } } else for (p = 0, d = this._onFalse.length; p < d; ++p) h += this._onFalse[p].get(e, t, n, r); return h } catch (l) { if (Template.DEBUG_MODE || l instanceof JTException) throw l; return "" } }; var JTException = function (e) { this.type = e }; JTException.prototype = Error, JTException.prototype.get = function (e) { throw this }; var Include = function (e, t, n) { e.match(/\{#include (.*?)(?: root=(.*?))?\}/), this._template = t[RegExp.$1]; if (this._template == undefined && Template.DEBUG_MODE) throw new Error("jTemplates: Cannot find include: " + RegExp.$1); this._root = RegExp.$2, this._mainTempl = n }; Include.prototype.get = function (e, t, n, r) { try { return this._template.get(this._mainTempl.getBin().evaluate(e, t, n, this._root), t, n, r) } catch (i) { if (Template.DEBUG_MODE || i instanceof JTException) throw i } return "" }; var UserParam = function (e, t) { e.match(/\{#param name=(\w*?) value=(.*?)\}/), this._name = RegExp.$1, this._value = RegExp.$2, this._templ = t }; UserParam.prototype.get = function (e, t, n, r) { try { t[this._name] = this._templ.getBin().evaluate(e, t, n, this._value) } catch (i) { if (Template.DEBUG_MODE || i instanceof JTException) throw i; t[this._name] = undefined } return "" }; var UserVariable = function (e, t) { e.match(/\{#var (.*?)\}/), this._id = RegExp.$1, this._templ = t }; UserVariable.prototype.get = function (e, t, n, r) { try { if (n == undefined) return ""; var i = this._templ.getBin().evaluate(e, t, n, this._id), s = jQuery.data(n, "jTemplatesRef"); s == undefined && (s = { guid: ++Template.guid, d: [] }); var o = s.d.push(i); return jQuery.data(n, "jTemplatesRef", s), "(TemplateUtils.ReturnRefValue(this," + s.guid + "," + (o - 1) + "))" } catch (u) { if (Template.DEBUG_MODE || u instanceof JTException) throw u; return "" } }; var Cycle = function (oper) { oper.match(/\{#cycle values=(.*?)\}/), this._values = eval(RegExp.$1), this._length = this._values.length; if (this._length <= 0) throw new Error("jTemplates: no elements for cycle"); this._index = 0, this._lastSessionID = -1 }; Cycle.prototype.get = function (e, t, n, r) { var i = jQuery.data(n, "jTemplateSID"); i != this._lastSessionID && (this._lastSessionID = i, this._index = 0); var s = this._index++ % this._length; return this._values[s] }, jQuery.fn.setTemplate = function (e, t, n) { return jQuery(this).each(function () { var r = e && e.constructor == Template ? e : new Template(e, t, n); jQuery.data(this, "jTemplate", r), jQuery.data(this, "jTemplateSID", 0) }) }, jQuery.fn.setTemplateURL = function (e, t, n) { var r = jQuery.ajax({ url: e, dataType: "text", async: !1, type: "GET" }).responseText; return jQuery(this).setTemplate(r, t, n) }, jQuery.fn.setTemplateElement = function (e, t, n) { var r = jQuery("#" + e).val(); return r == null && (r = jQuery("#" + e).html(), r = r.replace(/&lt;/g, "<").replace(/&gt;/g, ">")), r = jQuery.trim(r), r = r.replace(/^<\!\[CDATA\[([\s\S]*)\]\]>$/im, "$1"), r = r.replace(/^<\!--([\s\S]*)-->$/im, "$1"), jQuery(this).setTemplate(r, t, n) }, jQuery.fn.hasTemplate = function () { var e = 0; return jQuery(this).each(function () { jQuery.getTemplate(this) && ++e }), e }, jQuery.fn.removeTemplate = function () { return jQuery(this).processTemplateStop(), jQuery(this).each(function () { jQuery.removeData(this, "jTemplate") }) }, jQuery.fn.setParam = function (e, t) { return jQuery(this).each(function () { var n = jQuery.getTemplate(this); if (n != null) n.setParam(e, t); else if (Template.DEBUG_MODE) throw new Error("jTemplates: Template is not defined.") }) }, jQuery.fn.processTemplate = function (e, t, n) { return jQuery(this).each(function () { var r = jQuery.getTemplate(this); if (r != null) n != undefined && n.StrToJSON && (e = r.f_parseJSON(e)), jQuery.data(this, "jTemplateSID", jQuery.data(this, "jTemplateSID") + 1), jQuery(this).html(r.get(e, t, this, 0)); else if (Template.DEBUG_MODE) throw new Error("jTemplates: Template is not defined.") }) }, jQuery.fn.processTemplateAppend = function (e, t, n) { return jQuery(this).each(function () { var r = jQuery.getTemplate(this); if (r != null) n != undefined && n.StrToJSON && (e = r.f_parseJSON(e)), jQuery.data(this, "jTemplateSID", jQuery.data(this, "jTemplateSID") + 1), jQuery(this).append(r.get(e, t, this, 0)); else if (Template.DEBUG_MODE) throw new Error("jTemplates: Template is not defined.") }) }, jQuery.fn.processTemplateURL = function (e, t, n) { var r = this, i = jQuery.extend({ cache: !1 }, jQuery.ajaxSettings); return i = jQuery.extend(i, n), jQuery.ajax({ url: e, type: i.type, data: i.data, dataFilter: i.dataFilter, async: i.async, headers: i.headers, cache: i.cache, timeout: i.timeout, dataType: "text", success: function (e) { var n = jQuery(r).processTemplate(e, t, { StrToJSON: !0 }); i.on_success && i.on_success(n) }, error: i.on_error, complete: i.on_complete }), this }; var Updater = function (e, t, n, r, i, s) { this._url = e, this._param = t, this._interval = n, this._args = r, this.objs = i, this.timer = null, this._options = s || {}; var o = this; jQuery(i).each(function () { jQuery.data(this, "jTemplateUpdater", o) }), this.run() }; Updater.prototype.run = function () { this.objs = jQuery.grep(this.objs, function (e) { return jQuery.contains(document.body, e.jquery ? e[0] : e) }); if (this.objs.length === 0) return; var e = this; jQuery.ajax({ url: this._url, dataType: "text", data: this._args, cache: !1, headers: e._options.headers, success: function (t) { try { var n = jQuery(e.objs).processTemplate(t, e._param, { StrToJSON: !0 }); e._options.on_success && e._options.on_success(n) } catch (r) { } } }), this.timer = setTimeout(function () { e.run() }, this._interval) }, jQuery.fn.processTemplateStart = function (e, t, n, r, i) { return new Updater(e, t, n, r, this, i) }, jQuery.fn.processTemplateStop = function () { return jQuery(this).each(function () { var e = jQuery.data(this, "jTemplateUpdater"); if (e == null) return; var t = this; e.objs = jQuery.grep(e.objs, function (e) { return e != t }), jQuery.removeData(this, "jTemplateUpdater") }) }, jQuery.extend({ createTemplate: function (e, t, n) { return new Template(e, t, n) }, createTemplateURL: function (e, t, n) { var r = jQuery.ajax({ url: e, dataType: "text", async: !1, type: "GET" }).responseText; return new Template(r, t, n) }, getTemplate: function (e) { return jQuery.data(e, "jTemplate") }, processTemplateToText: function (e, t, n) { return e.get(t, n, undefined, 0) }, jTemplatesDebugMode: function (e) { Template.DEBUG_MODE = e } }) } (jQuery)