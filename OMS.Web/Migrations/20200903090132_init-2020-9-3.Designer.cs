// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OMS.Data.Implementing;

namespace OMS.Web.Migrations
{
    [DbContext(typeof(OMSContext))]
    [Migration("20200903090132_init-2020-9-3")]
    partial class init202093
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OMS.Data.Domain.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("EntityId");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OptionType");

                    b.HasKey("Id");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("OMS.Data.Domain.ActivityLogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<string>("SystemName");

                    b.Property<string>("TableName");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogType");
                });

            modelBuilder.Entity("OMS.Data.Domain.ApprovalProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ApprovalProcess");
                });

            modelBuilder.Entity("OMS.Data.Domain.ApprovalProcessDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalProcessId");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("Sort");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalProcessId");

                    b.HasIndex("UserId");

                    b.ToTable("ApprovalProcessDetail");
                });

            modelBuilder.Entity("OMS.Data.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<int>("ParentCategoryId");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("OMS.Data.Domain.CMBOrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Message");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OrderNum");

                    b.HasKey("Id");

                    b.ToTable("CMBOrderLog");
                });

            modelBuilder.Entity("OMS.Data.Domain.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BankAccount");

                    b.Property<string>("BankOfDeposit");

                    b.Property<string>("Contact");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("CustomerEmail");

                    b.Property<int>("CustomerTypeId");

                    b.Property<decimal>("DisCount");

                    b.Property<string>("Email");

                    b.Property<bool>("IsSynchronized");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<string>("Mobile");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<int>("PriceTypeId");

                    b.Property<string>("RegisterAddress");

                    b.Property<string>("RegisterTel");

                    b.Property<string>("TaxpayerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("OMS.Data.Domain.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("IsSynchronized");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<string>("ShopCode");

                    b.HasKey("Id");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("OMS.Data.Domain.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("IsSynchronized");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("Sort");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Dictionary");
                });

            modelBuilder.Entity("OMS.Data.Domain.InvoiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankOfDeposit");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("OrderId");

                    b.Property<string>("RegisterAddress");

                    b.Property<string>("RegisterTel");

                    b.Property<string>("TaxpayerID");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("InvoiceInfo");
                });

            modelBuilder.Entity("OMS.Data.Domain.K3BaseData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("FName");

                    b.Property<string>("FNumber");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("No");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("K3BaseData");
                });

            modelBuilder.Entity("OMS.Data.Domain.K3BillNoRelated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("K3BillNo");

                    b.Property<string>("Message");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OMSSeriNo");

                    b.HasKey("Id");

                    b.ToTable("K3BillNoRelated");
                });

            modelBuilder.Entity("OMS.Data.Domain.K3Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Key");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("K3Customers");
                });

            modelBuilder.Entity("OMS.Data.Domain.NumSeq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cate");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("DateNo");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("Seq");

                    b.HasKey("Id");

                    b.ToTable("NumSeq");
                });

            modelBuilder.Entity("OMS.Data.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressDetail");

                    b.Property<string>("AdminMark");

                    b.Property<int>("AppendType");

                    b.Property<int>("ApprovalProcessId");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("CustomerId");

                    b.Property<string>("CustomerMark");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerPhone");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<string>("DeliveryNumber");

                    b.Property<int>("DeliveryTypeId");

                    b.Property<int>("DistrictId");

                    b.Property<string>("FinanceMark");

                    b.Property<short>("InvoiceMode");

                    b.Property<short>("InvoiceType");

                    b.Property<bool?>("IsCopied");

                    b.Property<bool>("IsLackStock");

                    b.Property<bool>("IsLocked");

                    b.Property<bool>("IsNeedPaperBag");

                    b.Property<bool>("Isvalid");

                    b.Property<int>("LockMan");

                    b.Property<bool>("LockStock");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OrgionSerialNumber");

                    b.Property<int?>("OriginalOrderId");

                    b.Property<string>("PSerialNumber");

                    b.Property<DateTime?>("PayDate");

                    b.Property<int>("PayMentType");

                    b.Property<decimal>("PayPrice");

                    b.Property<short>("PayState");

                    b.Property<int>("PayType");

                    b.Property<int>("PriceTypeId");

                    b.Property<string>("ProductCoupon");

                    b.Property<int?>("SalesManId");

                    b.Property<string>("SerialNumber");

                    b.Property<int>("ShopId");

                    b.Property<int>("State");

                    b.Property<decimal>("SumPrice");

                    b.Property<string>("ToWarehouseMessage");

                    b.Property<DateTime?>("TransDate");

                    b.Property<int>("Type");

                    b.Property<string>("UserName");

                    b.Property<int>("WarehouseId");

                    b.Property<double>("WineWorldCoupon");

                    b.Property<short>("WriteBackState");

                    b.Property<double>("ZMCoupon");

                    b.Property<decimal?>("ZMIntegralValuePrice");

                    b.Property<double>("ZMWineCoupon");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("ShopId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("OrderId");

                    b.Property<int>("Sort");

                    b.Property<short>("State");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderApproval");
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<short>("DeliveryState");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OptionType");

                    b.Property<int>("OrderId");

                    b.Property<int>("OrderState");

                    b.Property<short>("PayState");

                    b.HasKey("Id");

                    b.ToTable("OrderLog");
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderPayPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("IsPay");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("OrderId");

                    b.Property<int>("PayMentType");

                    b.Property<int>("PayType");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderPayPrice");
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("OrderId");

                    b.Property<int?>("OrginId");

                    b.Property<decimal>("OrginPrice");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<int>("SaleProductId");

                    b.Property<decimal>("SumPrice");

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SaleProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderTableLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OptionType");

                    b.Property<int>("OrderId");

                    b.Property<int>("OrderState");

                    b.Property<string>("OrderTable");

                    b.HasKey("Id");

                    b.ToTable("OrderTableLog");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildUrl");

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Icon");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Level");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("ModuleName");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<int?>("Sort");

                    b.Property<bool>("State");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<bool>("State");

                    b.Property<string>("SystemName");

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Remark");

                    b.Property<int?>("Sort");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("MenuId");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("PermissionId");

                    b.Property<int?>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("PermissionId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("RoleId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("OMS.Data.Domain.PlatformProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("PlatForm");

                    b.Property<string>("PlatFormProductCode");

                    b.Property<int>("SaleProductId");

                    b.HasKey("Id");

                    b.ToTable("PlatformProduct");
                });

            modelBuilder.Entity("OMS.Data.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Area");

                    b.Property<int?>("Capacity");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Code");

                    b.Property<int?>("Country");

                    b.Property<string>("Cover");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("DeputyBarcode");

                    b.Property<string>("Grapes");

                    b.Property<bool?>("IsSynchronized");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<string>("NameEn");

                    b.Property<int?>("Packing");

                    b.Property<int?>("Type");

                    b.Property<string>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("OMS.Data.Domain.PurchasingProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int?>("FactReceivedNum");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("OrginId");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("PurchasingId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.ToTable("PurchasingProducts");
                });

            modelBuilder.Entity("OMS.Data.Domain.Purchasings.Purchasing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("OrgionSerialNumber");

                    b.Property<int?>("OriginalOrderId");

                    b.Property<string>("PurchasingNumber");

                    b.Property<string>("PurchasingOrderNumber");

                    b.Property<int>("State");

                    b.Property<int>("SupplierId");

                    b.Property<int>("WareHouseId");

                    b.HasKey("Id");

                    b.ToTable("Purchasing");
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableStock");

                    b.Property<int>("Channel");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int>("LockStock");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("ProductId");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("SaleProduct");
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProductLockedTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int>("LockNumber");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("OrderId");

                    b.Property<int>("OrderProductId");

                    b.Property<string>("OrderSerialNumber");

                    b.Property<int>("ProductId");

                    b.Property<int>("SaleProductId");

                    b.Property<int>("WareHouseId");

                    b.HasKey("Id");

                    b.ToTable("SaleProductLockedTrack");
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("CustomerTypeId");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<decimal>("Price");

                    b.Property<int>("SaleProductId");

                    b.HasKey("Id");

                    b.HasIndex("SaleProductId");

                    b.ToTable("SaleProductPrice");
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProductWareHouseStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int>("LockStock");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("ProductId");

                    b.Property<int>("SaleProductId");

                    b.Property<int>("Stock");

                    b.Property<int>("WareHouseId");

                    b.HasKey("Id");

                    b.HasIndex("SaleProductId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("SaleProductWareHouseStock");
                });

            modelBuilder.Entity("OMS.Data.Domain.SalesMans.SalesMan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("Department");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("SalesMan");
                });

            modelBuilder.Entity("OMS.Data.Domain.ScheduleTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Functions");

                    b.Property<bool>("IsStopOnError");

                    b.Property<bool>("Isvalid");

                    b.Property<DateTime?>("LastEndTime");

                    b.Property<DateTime?>("LastStartTime");

                    b.Property<DateTime?>("LastSuccessTime");

                    b.Property<int>("Minutes");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTask");
                });

            modelBuilder.Entity("OMS.Data.Domain.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("OMS.Data.Domain.SuitProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("Mark");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SuitProducts");
                });

            modelBuilder.Entity("OMS.Data.Domain.SuitProductsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int>("SaleProductId");

                    b.Property<int>("SuitProductsId");

                    b.HasKey("Id");

                    b.ToTable("SuitProductsDetail");
                });

            modelBuilder.Entity("OMS.Data.Domain.Suppliers.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("IsSynchronized");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("SupplierName");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("OMS.Data.Domain.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description");

                    b.Property<string>("IpAddress");

                    b.Property<bool>("Isvalid");

                    b.Property<short>("LogLevel");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("PageUrl");

                    b.Property<string>("ReferenceUrl");

                    b.HasKey("Id");

                    b.ToTable("SystemLog");
                });

            modelBuilder.Entity("OMS.Data.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Email");

                    b.Property<bool>("Isvalid");

                    b.Property<string>("LastLoginIp");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Salt");

                    b.Property<short>("State");

                    b.Property<string>("UserName");

                    b.Property<string>("UserPwd");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("OMS.Data.Domain.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<string>("Name");

                    b.Property<short>("WareHouseType");

                    b.HasKey("Id");

                    b.ToTable("WareHouse");
                });

            modelBuilder.Entity("OMS.Data.Domain.WareHouseArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode");

                    b.Property<string>("AreaName");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int?>("WhId");

                    b.HasKey("Id");

                    b.ToTable("WareHouseArea");
                });

            modelBuilder.Entity("OMS.Data.Domain.WareHouseAreaRanks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<bool>("Isvalid");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime>("ModifiedTime");

                    b.Property<int>("Rank");

                    b.Property<int>("WhAId");

                    b.Property<int>("WhId");

                    b.HasKey("Id");

                    b.HasIndex("WhId");

                    b.ToTable("WareHouseAreaRanks");
                });

            modelBuilder.Entity("OMS.Model.StockRemind.RemindTemplateModel", b =>
                {
                    b.Property<string>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16);

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("EditorTime");

                    b.Property<string>("Edtior")
                        .HasMaxLength(10);

                    b.Property<bool>("Isdelete");

                    b.Property<int>("SaleProductId");

                    b.Property<bool>("Statu");

                    b.Property<string>("TemplateCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("TemplateTitle")
                        .HasMaxLength(80);

                    b.Property<string>("User")
                        .HasMaxLength(100);

                    b.HasKey("TemplateId");

                    b.ToTable("RemindTemplate");
                });

            modelBuilder.Entity("OMS.Model.StockRemind.RemindTitleModel", b =>
                {
                    b.Property<string>("TitleId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("EditorTime");

                    b.Property<string>("Edtior")
                        .HasMaxLength(10);

                    b.Property<bool>("IsRead");

                    b.Property<bool>("Isdelete");

                    b.Property<string>("RemindTemplateModelTemplateId");

                    b.Property<string>("RemindTitle")
                        .HasMaxLength(50);

                    b.Property<string>("TemplateCode");

                    b.HasKey("TitleId");

                    b.HasIndex("RemindTemplateModelTemplateId");

                    b.ToTable("RemindTitle");
                });

            modelBuilder.Entity("OMS.Model.StockRemind.UserMessageModel", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<DateTime?>("EditorTime");

                    b.Property<string>("Edtior")
                        .HasMaxLength(10);

                    b.Property<bool>("Isdelete");

                    b.Property<string>("Message");

                    b.Property<string>("RemindTemplateModelTemplateId");

                    b.Property<string>("TemplateCode");

                    b.HasKey("MessageId");

                    b.HasIndex("RemindTemplateModelTemplateId");

                    b.ToTable("UserMessage");
                });

            modelBuilder.Entity("OMS.Data.Domain.ApprovalProcessDetail", b =>
                {
                    b.HasOne("OMS.Data.Domain.ApprovalProcess", "ApprovalProcess")
                        .WithMany("ApprovalProcessDetail")
                        .HasForeignKey("ApprovalProcessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.User", "User")
                        .WithMany("ApprovalProcessDetail")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.Customers", b =>
                {
                    b.HasOne("OMS.Data.Domain.Dictionary", "Dictionary")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.InvoiceInfo", b =>
                {
                    b.HasOne("OMS.Data.Domain.Order", "Order")
                        .WithOne("InvoiceInfo")
                        .HasForeignKey("OMS.Data.Domain.InvoiceInfo", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.Order", b =>
                {
                    b.HasOne("OMS.Data.Domain.Delivery", "Delivery")
                        .WithMany("Order")
                        .HasForeignKey("DeliveryTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.Shop", "Shop")
                        .WithMany("Order")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.WareHouse", "WareHouse")
                        .WithMany("Order")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderApproval", b =>
                {
                    b.HasOne("OMS.Data.Domain.Order", "Order")
                        .WithMany("OrderApproval")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.User", "User")
                        .WithMany("OrderApproval")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderPayPrice", b =>
                {
                    b.HasOne("OMS.Data.Domain.Order", "Order")
                        .WithMany("OrderPayPrice")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.OrderProduct", b =>
                {
                    b.HasOne("OMS.Data.Domain.Order", "Order")
                        .WithMany("OrderProduct")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.SaleProduct", "SaleProduct")
                        .WithMany("OrderProduct")
                        .HasForeignKey("SaleProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.RoleMenu", b =>
                {
                    b.HasOne("OMS.Data.Domain.Permissions.Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId");

                    b.HasOne("OMS.Data.Domain.Permissions.Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.RolePermission", b =>
                {
                    b.HasOne("OMS.Data.Domain.Permissions.Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId");

                    b.HasOne("OMS.Data.Domain.Permissions.Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.UserPermission", b =>
                {
                    b.HasOne("OMS.Data.Domain.Permissions.Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId");
                });

            modelBuilder.Entity("OMS.Data.Domain.Permissions.UserRole", b =>
                {
                    b.HasOne("OMS.Data.Domain.Permissions.Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("OMS.Data.Domain.Product", b =>
                {
                    b.HasOne("OMS.Data.Domain.Dictionary", "Dictionary")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProduct", b =>
                {
                    b.HasOne("OMS.Data.Domain.Product", "Product")
                        .WithMany("SaleProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProductPrice", b =>
                {
                    b.HasOne("OMS.Data.Domain.SaleProduct", "SaleProduct")
                        .WithMany("SaleProductPrice")
                        .HasForeignKey("SaleProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.SaleProductWareHouseStock", b =>
                {
                    b.HasOne("OMS.Data.Domain.SaleProduct", "SaleProduct")
                        .WithMany()
                        .HasForeignKey("SaleProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS.Data.Domain.WareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Data.Domain.WareHouseAreaRanks", b =>
                {
                    b.HasOne("OMS.Data.Domain.WareHouse", "WareHouse")
                        .WithMany("WareHouseAreaRanks")
                        .HasForeignKey("WhId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS.Model.StockRemind.RemindTitleModel", b =>
                {
                    b.HasOne("OMS.Model.StockRemind.RemindTemplateModel")
                        .WithMany("RemindTitles")
                        .HasForeignKey("RemindTemplateModelTemplateId");
                });

            modelBuilder.Entity("OMS.Model.StockRemind.UserMessageModel", b =>
                {
                    b.HasOne("OMS.Model.StockRemind.RemindTemplateModel")
                        .WithMany("UserMessages")
                        .HasForeignKey("RemindTemplateModelTemplateId");
                });
#pragma warning restore 612, 618
        }
    }
}
